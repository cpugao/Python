Query: Create 5 books with the following names: C Sharp, Java, Python, PHP, Ruby

Command: csharp = Book.objects.create(title="C Sharp")
         java = Book.objects.create(title="Java")
         python = Book.objects.create(title="Python")
         php = Book.objects.create(title="PHP")
         ruby = Book.objects.create(title="Ruby")

<QuerySet [{'id': 1, 'title': 'C Sharp', 'desc': '', 'created_at': datetime.datetime(2020, 8, 14, 7, 29, 20, 705589, tzinfo=<UTC>),
 'updated_at': datetime.datetime(2020, 8, 14, 7, 29, 20, 705589, tzinfo=<UTC>)}, {'id': 2, 'title': 'Java', 'desc': '', 'created_at':
  datetime.datetime(2020, 8, 14, 7, 30, 31, 12614, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 8, 14, 7, 30, 31, 13620, tzinfo=<UTC>)},
   {'id': 3, 'title': 'Python', 'desc': '', 'created_at': datetime.datetime(2020, 8, 14, 7, 30, 57, 40302, tzinfo=<UTC>), 'updated_at': 
   datetime.datetime(2020, 8, 14, 7, 30, 57, 40302, tzinfo=<UTC>)}, {'id': 4, 'title': 'PHP', 'desc': '', 'created_at': 
   datetime.datetime(2020, 8, 14, 7, 31, 47, 100868, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 8, 14, 7, 31, 47, 100868, tzinfo=<UTC>)},
    {'id': 5, 'title': 'Ruby', 'desc': '', 'created_at': datetime.datetime(2020, 8, 14, 7, 32, 7, 259150, tzinfo=<UTC>), 'updated_at':
     datetime.datetime(2020, 8, 14, 7, 32, 7, 259150, tzinfo=<UTC>)}]>


Query: Create 5 different authors: Jane Austen, Emily Dickinson, Fyodor Dostoevsky, William Shakespeare, Lau Tzu

Command: jane = Author.objects.create(first_name="Jane",last_name="Austen")
         emily = Author.objects.create(first_name="Emily", last_name="Dickinson")
         fyodor = Author.objects.create(first_name="Fyodor", last_name="Dostoevsky")
         william = Author.objects.create(first_name="William", last_name="Shakespeare")
         lau = Author.objects.create(first_name="Lau", last_name="Tzu")

<QuerySet [{'id': 1, 'first_name': 'Jane', 'last_name': 'Austen', 'created_at': datetime.datetime(2020, 8, 14, 7, 37, 9, 197819, tzinfo=<UTC>),
 'updated_at': datetime.datetime(2020, 8, 14, 7, 37, 9, 197819, tzinfo=<UTC>)}, {'id': 2, 'first_name': 'Emily', 'last_name': 'Dickinson', 'created_at':
  datetime.datetime(2020, 8, 14, 7, 37, 48, 54429, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 8, 14, 7, 37, 48, 54429, tzinfo=<UTC>)},
  {'id': 3, 'first_name': 'Fyodor', 'last_name': 'Dostoevsky', 'created_at': datetime.datetime(2020, 8, 14, 7, 39, 11, 707758, tzinfo=<UTC>), 
  'updated_at': datetime.datetime(2020, 8, 14, 7, 39, 11, 707758, tzinfo=<UTC>)}, {'id': 4, 'first_name': 'William', 'last_name': 'Shakespeare',
  'created_at': datetime.datetime(2020, 8, 14, 7, 40, 3, 367271, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 8, 14, 7, 40, 3, 367271, tzinfo=<UTC>)}, 
  {'id': 5, 'first_name': 'Lau', 'last_name': 'Tzu', 'created_at': datetime.datetime(2020, 8, 14, 7, 40, 47, 604708, tzinfo=<UTC>), 'updated_at': 
  datetime.datetime(2020, 8, 14, 7, 40, 47, 604708, tzinfo=<UTC>)}]>


Query: Change the name of the C Sharp book to C#

Command: csharp = Book.objects.get(id=1)
         csharp.title="C#"
         csharp.save()
         Book.objects.get(id=1).title

'C#'


Query: Change the first name of the 4th author to Bill

Command: william = Author.objects.get(id=4)
         william.first_name="Bill"
         william.save()
         Author.objects.get(id=4).first_name

'Bill'


Query: Assign the first author to the first 2 books

Command: first_book = Book.objects.get(id=1)
>>> second_book = Book.objects.get(id=2)
>>> first_author = Author.objects.get(id=1)
>>> first_author.books.add(first_book)
>>> second_book.books_written.add(first_author)

#	id	author_id	book_id
1	1	1	     1
2	2	1	     2

author1_books = Author.objects.get(id=1).books.all().values()
>>> for book in author1_books:
...     print(book["title"])
...
C#
Java


Query: Assign the second author to the first 3 books

Command:  first_book = Book.objects.get(id=1)
          second_book = Book.objects.get(id=2)
          third_book = Book.objects.get(id=3)
          second_author = Author.objects.get(id=2)
          second_author.books.add(first_book,second_book,third_book)
          author2_books = Author.objects.get(id=2).books.all().values()
          for book in author2_books:
          ...     print(book["title"])
          ...

C#
Java
Python


Query: Assign the third author to the first 4 books

Command: third_author = Author.objects.get(id=3)
         fourth_book = Book.objects.get(id=4)
         third_author.books.add(first_book,second_book,third_book,fourth_book)
         author3_books = Author.objects.get(id=3).books.all().values()
         for book in author3_books:
         ...     print(book["title"])
         ...

C#
Java
Python
PHP 


Query: Assign the fourth author to the first 5 books

Command: fourth_author = Author.objects.get(id=4)
         fifth_book = Book.objects.get(id=5)
         fourth_author.books.add(first_book,second_book,third_book,fourth_book,fifth_book)
         author4_books = Author.objects.get(id=4).books.all().values()
         for book in author4_books:
         ...     print(book["title"])
         ...

C#
Java
Python
PHP
Ruby


Query: Retrieve all the authors for the 3rd book

Commands: >>> third_book.books_written.all().values()

<QuerySet [{'id': 2, 'first_name': 'Emily', 'last_name': 'Dickinson', 'notes': '0', 'created_at': datetime.datetime(2020, 8, 14, 7, 37, 48, 54429, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 8, 14, 7, 37, 48, 54429, tzinfo=<UTC>)}, {'id': 3, 'first_name': 'Fyodor', 'last_name': 'Dostoevsky', 'notes': '0', 'created_at': datetime.datetime(2020, 8, 14, 7, 39, 11, 707758, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 8, 14, 7, 39, 11, 707758, tzinfo=<UTC>)}, {'id': 4, 'first_name': 'Bill', 'last_name': 'Shakespeare', 'notes': '0', 'created_at': datetime.datetime(2020, 8, 14, 7, 40, 3, 367271, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 8, 14, 8, 2, 38, 62854, tzinfo=<UTC>)}]>


Query: Remove the first author of the 3rd book

Command: third_book.books_written.remove(third_book.books_written.first())
         third_book.books_written.all().values()

<QuerySet [{'id': 3, 'first_name': 'Fyodor', 'last_name': 'Dostoevsky', 'notes': '0', 'created_at': datetime.datetime(2020, 8, 14, 7, 39, 11, 707758, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 8, 14, 7, 39, 11, 707758, tzinfo=<UTC>)}, {'id': 4, 'first_name': 'Bill', 'last_name': 'Shakespeare', 'notes': '0', 'created_at': datetime.datetime(2020, 8, 14, 7, 40, 3, 367271, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 8, 14, 8, 2, 38, 62854, tzinfo=<UTC>)}]>


Query: Add the 5th author as one of the authors of the 2nd book

Command: fifth_author = Author.objects.get(id=5)
         second_book.books_written.add(fifth_author)
         second_book.books_written.all().values()

<QuerySet [{'id': 1, 'first_name': 'Jane', 'last_name': 'Austen', 'notes': '0', 'created_at': datetime.datetime(2020, 8, 14, 7, 37, 9, 197819, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 8, 14, 7, 37, 9, 197819, tzinfo=<UTC>)}, {'id': 2, 'first_name': 'Emily', 'last_name': 'Dickinson', 'notes': '0', 'created_at': datetime.datetime(2020, 8, 14, 7, 37, 48, 54429, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 8, 14, 7, 37, 48, 54429, tzinfo=<UTC>)}, {'id': 3, 'first_name': 'Fyodor', 'last_name': 'Dostoevsky', 'notes': '0', 'created_at': datetime.datetime(2020, 8, 14, 7, 39, 11, 707758, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 8, 14, 7, 39, 11, 707758, tzinfo=<UTC>)}, {'id': 4, 'first_name': 'Bill', 'last_name': 'Shakespeare', 'notes': '0', 'created_at': datetime.datetime(2020, 8, 14, 7, 40, 3, 367271, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 8, 14, 8, 2, 38, 62854, tzinfo=<UTC>)}, {'id': 5, 'first_name': 'Lau', 'last_name': 'Tzu', 'notes': '0', 'created_at': datetime.datetime(2020, 8, 14, 7, 40, 47, 604708, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 8, 14, 7, 40, 47, 604708, tzinfo=<UTC>)}]>


Query: Find all the books that the 3rd author is part of

Command: author3_books = Author.objects.get(id=3).books.all().values()
         for book in author3_books:
         ...     print (book["title"])
         ...

C#
Java
Python
PHP


Query: Find all the authors that contributed to the 5th book

Command: for author in fifth_book.books_written.all():
         ...     print (author.first_name + " " + author.last_name)
         ...
         
Bill Shakespeare







